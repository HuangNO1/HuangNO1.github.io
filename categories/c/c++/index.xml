<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C/C&#43;&#43; - 分類 - Rem Blog</title>
        <link>https://huangno1.github.io/categories/c/c&#43;&#43;/</link>
        <description>C/C&#43;&#43; - 分類 - Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><atom:link href="https://huangno1.github.io/categories/c/c&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>C&#43;&#43; - 關於多態中的虛函數與純虛函數</title>
    <link>https://huangno1.github.io/about_cpp_class_virtual_function/</link>
    <pubDate>Fri, 07 Aug 2020 18:49:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/about_cpp_class_virtual_function/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/about_cpp_class_virtual_function.png" referrerpolicy="no-referrer">
            </div>前言 大一自己寫 C++ 時碰到的問題，一直沒發表文章，現在趁有空寫一下。
多態與虛函數  P.S. 大陸叫對象，台灣叫物件。
 我的理解是多態就是一個類（class）演伸出多種物件（Object），父類相當於模板藍圖的功能。虛函數是用來子類繼承後能夠複寫的函數。
我們先看一下虛函數嘴臉長怎樣：
在下面的例子中是一個 Base Class（基類、父類），如果函數前面宣告有添加 virtual 就是虛函數。
1 2 3 4 5 6  class Shape { public: virtual string toString() const; virtual double getArea() const; }   下面是一個 Circle 子類（superclass）（超生類、派生類），引入 Circle 的 getArea() 和 toString() 是虛函數，我們現在是在子類中重寫（重定義）類的虛構函數（此時你可以將父類的虛構函數想像成模板）。
1 2 3 4 5 6 7 8 9 10 11 12  class Circle : public Shape { private: double radius; public: Circle(); Circle(double); double getRadius() const; void setRadius(double); double getArea() const; string toString() const; }   實際當我們在使用虛構函數時，是把它當作跳板，去自動便是哪個函式是哪個函式，e.]]></description>
</item><item>
    <title>C&#43;&#43; 關於某小數轉進制的題目-解題經驗</title>
    <link>https://huangno1.github.io/cpp_solving_decimal_programming/</link>
    <pubDate>Fri, 11 Oct 2019 12:24:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/cpp_solving_decimal_programming/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/cpp_solving_decimal_programming.png" referrerpolicy="no-referrer">
            </div>前言 最近我朋友問了我一個關於一個小數轉進制的題目，雖然我當時很忙，但最後我還是抽出了時間幫忙解決，解題的一開始我以為題目挺簡單的，但在解題過程發現還蠻多小技巧要使用，我會在這篇文章分享我的解題過程。
題目 我先給各位看一下題目。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  Objective Programming using basic data types and control structures. Specification Write a program which converts a base-S floating point number with value in the range [0,1) to its equivalent base-D representation, where S, D =2, … , 10.]]></description>
</item></channel>
</rss>
