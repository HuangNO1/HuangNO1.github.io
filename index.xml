<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Rem Blog</title>
        <link>https://huangno1.github.io/</link>
        <description>Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><lastBuildDate>Thu, 30 Jul 2020 23:17:28 &#43;0800</lastBuildDate>
            <atom:link href="https://huangno1.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Python 解決羅馬數字轉換 NPSC 模擬試題</title>
    <link>https://huangno1.github.io/python_rome_number_programming/</link>
    <pubDate>Thu, 30 Jul 2020 23:17:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/python_rome_number_programming/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/python_rome_number_programming.jpg" referrerpolicy="no-referrer">
            </div>前言 因為我家人正在學習寫 Python，我教導他去刷題庫，結果在高中生解題系統要解某個基礎題庫的題目時卡住了，我只好幫他解一下題目。
題目 這是高中生解題系統基礎題庫裡的 a013 題目
內容 如果生活在數世紀之前的古羅馬，你應該用過 V 來表示五。V 和 5 這兩個符號都可以用來表示數目五。用來表示數目的符號稱作數字。而羅馬人用來表示數目的符號就是羅馬數字。
以下是七個基本的羅馬數字︰
   羅馬數字 數目     I 1   V 5   X 10   L 50   C 100   D 500   M 1,000    所有其他的數目都是由這些數字組合而成。數目都是由左寫到右，通常值是等於組成的羅馬數字加起來。
例如十七可以表示為
1 2  X + V + I + I = XVII 10 + 5 + 1 + 1 = 17   表示羅馬數字可以使用減法來取代加法的規則。例如四可以不用四個一相加來表示 IIII，而採用五減一來表示 IV。利用這類規則，羅馬人能夠減化許多數目的表示方式，例如 IX 取代 VIIII 表示 9，及 CD 取代 CCCC 表示 400。]]></description>
</item><item>
    <title>Linux 配置 npm</title>
    <link>https://huangno1.github.io/linux_npm_configuration/</link>
    <pubDate>Thu, 06 Feb 2020 11:27:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/linux_npm_configuration/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_npm_configuration.png" referrerpolicy="no-referrer">
            </div>前言 npm（Node Package Manager）是 node 包管理器，是 Node.js 預設的、以 JavaScript 編寫的軟體套件管理系統。相信各位在開發 Vue 或是快應用等方面都會用到 npm，這裡我寫一下關於 npm 在 Linux 上的配置，因為在 Linux 使用 npm，因為在使用 npm 安裝套件時會發生權限不足問題還有下載源速度過慢，我將在這篇文章教大家如何配置 npm。
安裝 npm 裝 npm 時，會幫你也裝 nodeJS等相關依賴。
1  sudo pacman -S npm   npm 本地化  在家目錄建立資料夾  1  mkdir ~/.npm-global   設置 npm 的目標資料夾  1  npm config set prefix &#39;~/.npm-global&#39;   加入本地環境變量  如果你有安裝使用 ZSH，也需要在 ~/.zshrc 引入環境變量。
1 2  vim ~/.]]></description>
</item><item>
    <title>Arch Linux 打包教學</title>
    <link>https://huangno1.github.io/archlinux_makepkg/</link>
    <pubDate>Fri, 31 Jan 2020 11:27:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/archlinux_makepkg/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_makepkg.png" referrerpolicy="no-referrer">
            </div>前言 這次之所以會有本次教學，是因為我大二上參加 2019 服創比賽，因為快應用開發 IDE 只有 *.deb 的 Ubuntu 版本，我當時將 *.deb 轉成 tar.gz 適用 Arch 發行版的包失敗，當時我是看這網站使用 Debtap 工具，雖然最後成功轉成 tar.gz，但是安裝時卻輸出該包的結構損壞，我也有在網上看到有建議 dkpg，然而實際上寫 PKGBUILD 才是最好的方法，當時是我朋友將快應用的官方 IDE 打包到 AUR 上，最後安裝成功，打包中途他也遇到很多坑，最後他寫了一篇 Arch Linux 打包教學，但他這篇卻沒有給出實例，讓大多數第一次打包的人看不懂，就跟看官方文檔一樣。網上詳細優質的打包教學少之又少，這次我藉著一個機會體會到打包的過程，為了紀錄這過程，我寫了這篇教學。
 本次文章參考了 ArchWiki 的 Creating packages (简体中文)、PKGBUILD (简体中文) 和書術方隅。你可以認為我這篇是這三篇的綜合進化版。
 簡述 創建 PKGBUILD – 一個包創建描述文件，由 makepkg 使用來從原始碼創建二進位制包。Arch 套裝軟體標準包含當前規則和提高套裝軟體質量的方法。如果已經有了 PKGBUILD 文件，請參考 makepkg (簡體中文)。
 打包前一定要先 Google 一下你要打包的軟體包是不是已經有人上傳到 AUR 了。
 準備工作 必需的軟體包 首先，確定你已安裝必須的工具包。安裝 base-devel 應該足夠了；它包含 make 和 makepkg 其它一些從原始碼編譯時所需要的工具。
創建包的一個很重要的工具是 makepkg（由 pacman 提供），它主要做以下工作：]]></description>
</item><item>
    <title>在 Linux 配置 Java 開發環境到虛擬硬碟 - Java8、Tomcat8、Maven3、IntelliJ IDEA</title>
    <link>https://huangno1.github.io/linux_java_tomcat_maven_intellijidea_install_configuration/</link>
    <pubDate>Tue, 28 Jan 2020 11:27:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/linux_java_tomcat_maven_intellijidea_install_configuration/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_java_tomcat_maven_intellijIDEA_install_configuration.png" referrerpolicy="no-referrer">
            </div>前言 我在這篇會分享我是如何在 Arch 上配置 Java 的開發環境。再來我必須說的是，我這個適用於你的電腦的 Linux SSD (root) 空間不夠的情況，大部分的人是 Windows 與 Linux 雙系統，像我只能把 SSD 割 30GB 給我 Linux (這是因為我電腦上的 Windows 有被廠商更改過，限制了割出的量)，而虛擬硬碟卻可以割到 100GB 以上，我會教大家如何將 Java 環境裝到 /home。如果覺得自己 SSD 夠用，就直接從 AUR 上 yay 下來，直接略過此次教學 (ﾒ ﾟ皿ﾟ)ﾒ，畢竟會有人覺得我這樣的做法讓系統管理有點髒。不過關於環境變量的配置可以參考我這篇文章，不管是裝在 SSD 還是 HDD。
JDK 版本選擇 JDK 1.xxx 和 JDK xxx.0 比如 jdk 1.8 和 jdk 8  參考自這網站的介紹。
 Sun 公司看別人的語言更新都更新到 xxx 了，自己的 Java 版本還是 1 點幾，讓人感覺很落後，所以在 jdk 1.6 的時候對外發布稱之為 jdk 6.0 ，讓人感覺更先進點。在寫 Java 的人眼裡都是叫 1.]]></description>
</item><item>
    <title>在 Linux 上控制 Python 版本 - pyenv</title>
    <link>https://huangno1.github.io/linux_python_pyenv/</link>
    <pubDate>Mon, 27 Jan 2020 15:26:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/linux_python_pyenv/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_python_pyenv.png" referrerpolicy="no-referrer">
            </div>前言 在 Linux 開發 Python 相關的項目，你是不是會碰到關於 Python 版本之類的問題？像是開發 Tensorflow 的時候碰到版本問題，原本 Python 3.7 可以支援 Tensorflow，但是忽然 Python 從 3.7 更新到 3.8.0，這時 Python 3.8 不支援 Tensorflow，你苦惱了，千辛萬苦的項目因為系統更新而導致版本不支援使項目暫停開發，這時 pyenv 將成為你的救星，如果你硬是不肯更新系統 Python 版本，你的系統將會得不到最新的體驗與安全並處於危險的不穩定狀態，系統更新真的很重要。
pyenv 是很棒的 Python 版本控制工具，讓你的電腦可以安裝多個 Python 版本。pyenv 是 Github 上的開源項目，關於使用須知該項目的 README.md 寫得很詳細。我這篇文章就分享一下我在 Arch Linux 的安裝方式。
安裝 從 Github 倉庫上直接 clone 下來。你也可以選擇直接在瀏覽器上下來。然後壓縮包解壓將文件內的文件放入 ~/.pyenv。
 註：如果你在國內網使用 Github 網速過於緩慢，建議開 Proxy，然後給 Git 設置代理。
 設置代理 1 2 3 4 5 6 7 8 9 10  # set http git config --global http.]]></description>
</item><item>
    <title>Archlinux KDE 動態桌布</title>
    <link>https://huangno1.github.io/archlinux_kde_video_wallpaper/</link>
    <pubDate>Wed, 15 Jan 2020 15:26:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/archlinux_kde_video_wallpaper/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_kde_video_wallpaper.png" referrerpolicy="no-referrer">
            </div>前言 Wallpapaer Engine 是非常優秀的動態桌布軟體，可惜的是這軟體不僅是需付費，也只支援 Windows，關於 KDE 動態桌布可能大家會有疑慮，Plasma KDE 究竟能不能實現動態桌布？答案是可以的，在這篇我將分享我完成動態桌布的過程。
當然，我也嘗試過使用 vlc 和 xwinwrap + mplayer，尤其是 xwinwrap 最折騰我，包括開機自啟，最後的效果都讓我不滿意。但是目前網上（包含 KDE 官網）所有關於 KDE 動態桌布的項目不是使用上不美觀或是沒效果（黑屏）。最後終於在一篇 Github 項目中看到黑屏的處理方法，無意間那些 KDE Video Wallpaper 插件都可以用了。
如果執意想使用 vlc 或是 xwinwrap + mplayer 的讀者可以參考某人的 Blog：设置 Linux 动态桌面的几种办法 - 簡書
Plasma Video Wallpaper WuSiYu / Plasma Video Wallpaper 這是 Github 上看到的項目，這也是因為我看到他在 B 站上的視頻才知道有這個項目。
完整項目使用過程他已經在他 Github 項目的 README.md 說得很清楚了。
先將項目下載解壓，進入項目目錄輸入以下指令：
 如果沒有安裝 cmake、make 就裝一下，如果有權限問題就給權限。
 1 2 3 4  sudo pacman -S cmake make # 安裝 cmake make cmake .]]></description>
</item><item>
    <title>Archlinux 安裝 Part 4 - 程序員終端標配 oh-my-zsh</title>
    <link>https://huangno1.github.io/archlinux_install_part4_on_my_zsh/</link>
    <pubDate>Sun, 05 Jan 2020 15:26:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/archlinux_install_part4_on_my_zsh/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_install_part4_on_my_zsh.png" referrerpolicy="no-referrer">
            </div>前言 我想我在 Linux 上用最多也最重要的就是終端機 Konsole 了，我們默認的是 Bash，然而 bash 過於單調，也沒有自動補全，這時我們就需要開源項目 oh-my-zsh，在這篇教學我會寫一下，我配置 oh-my-zsh 的過程。
我的 Konsole 我的終端機02.png
" 我的終端機 
Konsole 透明度設置 在標題欄點擊滑鼠右鍵。
設定透明度01.png
" 設定透明度 
在外觀與修復中，可以調整透明度。我調成不透明度 80%。
安裝 zsh 1  sudo pacman -S zsh   查看系統當前使用的 Shell 1  echo $SHELL # 查看指令   1  /bin/bash # 輸出結果   看系統是否裝了 zsh 1  cat /etc/shells # 輸入指令   1 2 3 4 5 6 7 8  # Pathnames of valid login shells.]]></description>
</item><item>
    <title>Archlinux 安裝 Part 3 - 基本軟體包安裝與 Mac 風界面設計</title>
    <link>https://huangno1.github.io/archlinux_install_part3_install_some_software_and_mac_style/</link>
    <pubDate>Sun, 05 Jan 2020 15:25:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/archlinux_install_part3_install_some_software_and_mac_style/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_install_part3_install_some_software_and_mac_style.png" referrerpolicy="no-referrer">
            </div>前言 我們在 Part 2 中已將基本的圖形界面以及中文字體等配置好，接下來我會在這篇中推薦一些實用的軟體與界面風格。
文本編輯器 Kate 可作為記事本使用。
1  sudo pacman -S kate   Typora 美化你的文本，編寫 Markdowm 語言，具有跨平台優點，Linux 上的 *.docx 拿到 Windows 上的 Office 容易走版，使用 Markdown 寫的文件不會有這問題。
1  sudo pacman -S typora   Visual Studio Code 一個輕快的編輯器，讓你的開發效率迅速提升。
 在 AUR 中 VScode 軟體包稱作 code。
 1  sudo pacman -S code   辦公軟體 WPS Office 作為在 Linux 上的最佳 MS 替代品，因為 MS 的 Office 不開源，所以無法在 Linux 使用 MS Office。WPS 在 Linux 不會有廣告，所以放心。]]></description>
</item><item>
    <title>Archlinux 安裝 Part 2 - 安裝後工作</title>
    <link>https://huangno1.github.io/archlinux_install_part2_general_recommendations/</link>
    <pubDate>Sat, 04 Jan 2020 15:24:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/archlinux_install_part2_general_recommendations/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/archlinux_install_part2_general_recommendations.png" referrerpolicy="no-referrer">
            </div>前言 我們已經在 Part 1 將基本的系統裝好了，接下來是安裝完的後續步驟。
確認連網 我們在上次的安裝教學 Part 1 已經在尾部補充將 networkmanager 裝上了，所以你不需要像上次教學那麼繁瑣，基本插網線就能連到。
 註：注意使用 systemctl 啟用 networkmanager 服務時要注意大小寫，開頭要大寫。
 1 2 3  systemctl enable NetworkManager # 設定開機自啟 systemctl strat NetworkManager # 啟用 Netmanager ping baidu.com # 確認連網   添加使用者 在上一期教學我們已經設定了超級使用者，即 Root，但是使用 Root 進行日常操作是不安全的，應創建用戶組進行日常操作，僅在系統管理時使用 Root。
另一方面，我們無法使用超級使用者進入圖形界面。
 註：將以下的所有 user 改成自己的使用者名稱。
 1 2 3 4 5  useradd -G wheel user # 新增使用者 passwd user # 設定使用者密碼 chfn user # 添加使用者信息，可暫時不填 mkdir -m 700 /home/user # 創建主目錄 chown user:user /home/user # 修改使用者與使用者群組   sudo 安裝 為了安全，我們可以使用 sudo 進行 root 權限操作，編輯 /etc/sudoers。]]></description>
</item><item>
    <title>影片賞析 -- 小丑（Joker）</title>
    <link>https://huangno1.github.io/joker_movie_moment/</link>
    <pubDate>Sun, 13 Oct 2019 14:22:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/joker_movie_moment/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/joker_movie_moment.png" referrerpolicy="no-referrer">
            </div>前言 近期，全球上映了一部電影 &ndash; 《小丑》（英語：Joker，香港譯《JOKER小丑》，中國大陸譯《小丑》）是一部於 2019 年上映的美國心理驚悚片，改編自DC漫畫旗下的同名角色，這部電影的預告片極為令人驚嘆，深層的黑暗、社會的底層、現實的矛盾&hellip;&hellip;等都驅使著我期待著這部電影上映，可惜的是我現在於大陸唸書，這部電影大陸不會上映，畢竟這是部充滿反社會負面情緒的電影 (◞‸◟)，超想回台灣看小丑。
這部電影也因為作品的人物描繪、情感細緻等因素，獲得了金預告獎 - 最佳前導預告提名、多倫多國際電影節 - 演員成就獎、威尼斯電影節 - 金獅獎、金紙夾獎與原聲音樂星獎。
心靈感觸 首先我就先說一下開場給我的感覺就是一種懸疑的電影，讓我看不透也摸不清，男主角換上小丑裝時就像帶上了神秘的面具，好比每個人出面對不同的人時會有不同的態度與舉止看不透真正的他，在電影起頭，男主角在街頭身著小丑服手拿廣告牌，中途被街頭的混混狠狠捉弄後畫面切到了精神病院，男主角在心理醫師面前談論他的幻想，這裡就引起了我的注意，女醫師問男主角亞瑟：「你知道你為什麼你會被關在這裡嗎？」接著亞瑟出了醫院坐公車去領藥，(ﾟдﾟ≡ﾟдﾟ) 你不是被關在精神病院嗎？但我沒有在意地繼續看下去，這裡是電影裡的第一個玄疑點，這時我對亞瑟的印象還是個心理跟正常人差不多，但很不幸遇到了一些倒霉事。
實際上，在電影的前幾十分鐘，我都認為亞瑟是個老實人，心理上稍微不正常而已，遇到了老闆不講理的指責、槍枝曝光後同事的背叛、被老闆開除而失去最愛的工作、地鐵上的三個精英青年殺人事件，這些人生失意都刻印在觀眾眼中，亞瑟被社會無情地拋棄，這時我又想起亞瑟開頭日記上寫的一句話：「我希望我的死比我的生命有價值。」這確實是個充滿抑鬱壓抑的文章。
這整部電影都讓我感到驚悚，尤其是最後亞瑟拿出手槍殺了節目主持人，亞瑟也給我看到了現實世界中真實的一面，或許有被誇大的成份，但毫無疑問地，這部電影體現了亞瑟可悲的人生。
Reference  【小丑】首支官方預告，10月3日(週四) 上映 - Youtube 小丑 (電影) - 維基百科 DC《小丑》万字终极解析，一个精神病患从受害者到恶魔的自白 - Youtube 《小丑》影评：DC极度现实之作 - BiliBili  ]]></description>
</item></channel>
</rss>
