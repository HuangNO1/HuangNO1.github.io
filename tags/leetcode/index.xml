<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LeetCode - 標籤 - Rem Blog</title>
        <link>https://huangno1.github.io/tags/leetcode/</link>
        <description>LeetCode - 標籤 - Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><lastBuildDate>Mon, 10 May 2021 08:03:28 &#43;0800</lastBuildDate><atom:link href="https://huangno1.github.io/tags/leetcode/" rel="self" type="application/rss+xml" /><item>
    <title>2021  3 - 4 月春招找實習過程心得</title>
    <link>https://huangno1.github.io/2021_spring_recruitment/</link>
    <pubDate>Mon, 10 May 2021 08:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/2021_spring_recruitment/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/2021_spring_recruitment.jpg" referrerpolicy="no-referrer">
            </div>前言 我將在這篇文章分享我的春招找實習心得，並且分享如何準備應聘。
背景  985 中南大學計算機學院軟件工程 18 級大三本科生 已修操作系統、計算機網路、數據庫、數據結構、算法等必要課程 時間安排從 7 月份開始能實習 3 - 4 個月 比較萬油精，可以前後端開發，偏好 C/C++ 崗位 (因為 Java 崗太卷了)  心得 這次 2021 年的春招實習，我先後投遞了各個大廠，像是阿里巴巴、騰訊、快手、字節跳動、華為，然而一直沒有好結果，加上自己一開始準備筆試面試並沒有準備多少，對我來說就像是突如其來的考試，最終到了五月份依然沒拿到好的 Offer。我過程有時被撈了又面掛了，剛開始每次面試我都很緊張，因為沒有面試經驗，甚至有一次我緊張到整晚都睡不著，然後面掛了又覺得自己是不是實力不夠，那段期間真的是不斷的自我懷疑，面到後面我都覺得有點無感隨緣了，感覺一切都無所謂了。
一開始我投的阿里巴巴招聘流程讓人覺得詭譎，說不出來的奇妙感，面試時問的問題過於硬核，然後阿里巴巴的崗位可能是因為內推關係，不能改比較坑。字節面試一面時感受得出面試官的不耐煩，華為的筆試我以為很簡單，結果我那次機考意外的難很多，我又寫題時間分配錯誤以及題意理解錯誤，最終以失敗告終，我或許不適合大廠。
至於小廠，小廠的面試反而沒那麼多八股文，就純聊天了解你的情況，但是最終都涼了，包括深圳的同為數碼科技(做監控安全方面)和武漢的統信(UOS、Deepin)，拒我的理由大多是 &ldquo;我們針對實習生的需求進行調整&rdquo;。感覺計算機行業競爭很激烈。
我想我最後打擊的事情是在深圳的華為 HR 大哥評價我的簡歷，學校不夠優秀，實踐雖然可以，但是可能對他們來說技術含量低，又專業不對口，所以建議我不要急著去找實習，要我去考個 C9 的研究生。
最後還是希望各位面試時盡量放輕鬆，不然容易腦袋死機，語言邏輯等表達不通順。然後提醒一下很多大廠的面試電話是別人打得了給你，你打不了電話給別人。
關於面試準備工作  註：一定要提前準備 1 個月以上。
 我們應該在這裡針對下面三個部份：
 數據結構與算法 對應崗位的八股文 簡歷項目  數據結構與算法 首先，我不是 ACM 的選手，也沒有算法競賽背景，所以說想要在部份過關，我的建議是在 LeetCode(力扣) 上進行刷題練習，很多人會有困惑，&ldquo;要怎麼刷？&quot;，我依序列出順序：
1. 劍指 Offer 75 題（劍指 Offer 是性價比最高，面試高頻考題）
2. 在題庫中照題目的出現頻率去刷，優先刷高頻出現率的題，刷題數約 100 題
其中面試很愛考得重點無非就是 DP(動態規劃)、鏈表、堆棧、隊列、排序(快排與歸併)、二分查找、數組、二叉樹、字符串處理、回溯、DFS、BFS、最短路徑算法(比較少考)。
你只要做到我所說的上面要求，基本大多數算法面試都能解決，如果之前學的東西都忘了沒關係，你邊刷題邊複習，學的效率很快。
我是在幾次面試的失敗毒打後，才開始刷 LeetCode，接著發現之前面試的算法題大多都是從劍指 Offer 選出來的。耗時一個月，已經刷了 180 題以上。]]></description>
</item><item>
    <title>互聯網公司大廠 – 面試八股文彙整</title>
    <link>https://huangno1.github.io/cs_interview_eight_part_questions/</link>
    <pubDate>Mon, 03 May 2021 17:28:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/cs_interview_eight_part_questions/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/cs_interview_eight_part_questions.jpg" referrerpolicy="no-referrer">
            </div>前言 因為 2021/03 月份我已經是大三了，我開始在春招找實習 Offer，在找實習的期間我在牛課網以及各大平台的面經驗分享中整理出一份八文面試題，整理的過程整整花了我將近一週的時間，希望我整理的內容對各位有幫助。
註：這篇文章是針對 C/C++ 崗位的面試題，數據結構、算法、操作系統、計算機網路、數據庫對大部分崗位是通用的。
重要度 重要性: 語言基礎 &gt;= 數據結構 == 算法 &gt; 操作系統 &gt; 計算機網路 &gt; 數據庫 &gt;= 機器學習
語言基礎 C++ 三大特性 封装性是基础，继承性是关键，多态性是补充，并且多态性存在于继承的环境中。 C++语言中支持数据封装，类是支持数据封装的工具，对象是数据封装的实现。 在封装中，还提供一种对数据访问的控制机制，使得一些数据被隐藏在封装体内，因此具有隐藏性。
封裝、繼承、多態，簡單說明 封装性:把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。 类将成员变量和成员函数封装在类的内部，根据需要设置访问权限，通过成员函数管理内部状态。
1 2 3 4 5 6 7 8 9 10 11  class Person { private://数据私有  string bame; int num; public://方法公有  void getName() { return name; } };   繼承:继承所表达的是类之间相关的关系，这种关系使得对象可以继承另外一类对象的特征和能力。 继承的作用：避免公用代码的重复开发，减少代码和数据冗余。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  #include &lt;iostream&gt; using namespace std; class Base { public: void printBase(void) { cout&lt;&lt;&#34;Base中的printBase&#34;&lt;&lt;endl; } }; class Son:public Base { }; int main(int argc, char *argv[]) { Son ob; ob.]]></description>
</item><item>
    <title>LeetCode 題庫 - Add Two Numbers (兩數相加)</title>
    <link>https://huangno1.github.io/leetcode_add_two_numbers/</link>
    <pubDate>Wed, 23 Dec 2020 18:17:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/leetcode_add_two_numbers/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/leetcode.jpg" referrerpolicy="no-referrer">
            </div>前言 是個難度適中的題目。
題目 Add Two Numbers (兩數相加)
題目描述 You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
給出兩個非空的鏈表用來表示兩個非負的整數。其中，它們各自的位數是按照逆序的方式存儲的，並且它們的每個節點只能存儲一位數字。
如果，我們將這兩個數相加起來，則會返回一個新的鍊表來表示它們的和。
您可以假設除了數字 0 之外，這兩個數都不會以 0 開頭。]]></description>
</item><item>
    <title>LeetCode 題庫 - Two Sum (兩數之和)</title>
    <link>https://huangno1.github.io/leetcode_two_sum/</link>
    <pubDate>Wed, 23 Dec 2020 04:17:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/leetcode_two_sum/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/leetcode.jpg" referrerpolicy="no-referrer">
            </div>前言 最近刷到的簡單題庫題。
題目 Two Sum (兩數之和)
題目描述 Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
給定一個整數數組 nums 和一個目標值 target，請你在該數組中找出和為目標值的那 兩個 整數，並返回他們的數組下標。
你可以假設每種輸入只會對應一個答案。但是，數組中同一個元素不能使用兩遍。
測資 Example 1：
1 2 3  Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].]]></description>
</item></channel>
</rss>
