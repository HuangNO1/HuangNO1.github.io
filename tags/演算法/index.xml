<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>演算法 - 標籤 - Rem Blog</title>
        <link>https://huangno1.github.io/tags/%E6%BC%94%E7%AE%97%E6%B3%95/</link>
        <description>演算法 - 標籤 - Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><lastBuildDate>Mon, 03 May 2021 17:28:28 &#43;0800</lastBuildDate><atom:link href="https://huangno1.github.io/tags/%E6%BC%94%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>互聯網公司大廠 – 面試八股文彙整</title>
    <link>https://huangno1.github.io/cs_interview_eight_part_questions/</link>
    <pubDate>Mon, 03 May 2021 17:28:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/cs_interview_eight_part_questions/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/cs_interview_eight_part_questions.jpg" referrerpolicy="no-referrer">
            </div>前言 因為 2021/03 月份我已經是大三了，我開始在春招找實習 Offer，在找實習的期間我在牛課網以及各大平台的面經驗分享中整理出一份八文面試題，整理的過程整整花了我將近一週的時間，希望我整理的內容對各位有幫助。
註：這篇文章是針對 C/C++ 崗位的面試題，數據結構、算法、操作系統、計算機網路、數據庫對大部分崗位是通用的。
重要度 重要性: 語言基礎 &gt;= 數據結構 == 算法 &gt; 操作系統 &gt; 計算機網路 &gt; 數據庫 &gt;= 機器學習
語言基礎 C++ 三大特性 封装性是基础，继承性是关键，多态性是补充，并且多态性存在于继承的环境中。 C++语言中支持数据封装，类是支持数据封装的工具，对象是数据封装的实现。 在封装中，还提供一种对数据访问的控制机制，使得一些数据被隐藏在封装体内，因此具有隐藏性。
封裝、繼承、多態，簡單說明 封装性:把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。 类将成员变量和成员函数封装在类的内部，根据需要设置访问权限，通过成员函数管理内部状态。
1 2 3 4 5 6 7 8 9 10 11  class Person { private://数据私有  string bame; int num; public://方法公有  void getName() { return name; } };   繼承:继承所表达的是类之间相关的关系，这种关系使得对象可以继承另外一类对象的特征和能力。 继承的作用：避免公用代码的重复开发，减少代码和数据冗余。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  #include &lt;iostream&gt; using namespace std; class Base { public: void printBase(void) { cout&lt;&lt;&#34;Base中的printBase&#34;&lt;&lt;endl; } }; class Son:public Base { }; int main(int argc, char *argv[]) { Son ob; ob.]]></description>
</item><item>
    <title>Python 解決羅馬數字轉換 NPSC 模擬試題</title>
    <link>https://huangno1.github.io/python_rome_number_programming/</link>
    <pubDate>Thu, 30 Jul 2020 23:17:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/python_rome_number_programming/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/python_rome_number_programming.jpg" referrerpolicy="no-referrer">
            </div>前言 因為我家人正在學習寫 Python，我教導他去刷題庫，結果在高中生解題系統要解某個基礎題庫的題目時卡住了，我只好幫他解一下題目。
題目 這是高中生解題系統基礎題庫裡的 a013 題目
內容 如果生活在數世紀之前的古羅馬，你應該用過 V 來表示五。V 和 5 這兩個符號都可以用來表示數目五。用來表示數目的符號稱作數字。而羅馬人用來表示數目的符號就是羅馬數字。
以下是七個基本的羅馬數字︰
   羅馬數字 數目     I 1   V 5   X 10   L 50   C 100   D 500   M 1,000    所有其他的數目都是由這些數字組合而成。數目都是由左寫到右，通常值是等於組成的羅馬數字加起來。
例如十七可以表示為
1 2  X + V + I + I = XVII 10 + 5 + 1 + 1 = 17   表示羅馬數字可以使用減法來取代加法的規則。例如四可以不用四個一相加來表示 IIII，而採用五減一來表示 IV。利用這類規則，羅馬人能夠減化許多數目的表示方式，例如 IX 取代 VIIII 表示 9，及 CD 取代 CCCC 表示 400。]]></description>
</item><item>
    <title>C&#43;&#43; 關於某小數轉進制的題目-解題經驗</title>
    <link>https://huangno1.github.io/cpp_solving_decimal_programming/</link>
    <pubDate>Fri, 11 Oct 2019 12:24:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/cpp_solving_decimal_programming/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/cpp_solving_decimal_programming.png" referrerpolicy="no-referrer">
            </div>前言 最近我朋友問了我一個關於一個小數轉進制的題目，雖然我當時很忙，但最後我還是抽出了時間幫忙解決，解題的一開始我以為題目挺簡單的，但在解題過程發現還蠻多小技巧要使用，我會在這篇文章分享我的解題過程。
題目 我先給各位看一下題目。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  Objective Programming using basic data types and control structures. Specification Write a program which converts a base-S floating point number with value in the range [0,1) to its equivalent base-D representation, where S, D =2, … , 10.]]></description>
</item></channel>
</rss>
