<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>JS - 標籤 - Rem Blog</title>
        <link>https://huangno1.github.io/tags/js/</link>
        <description>JS - 標籤 - Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><lastBuildDate>Thu, 06 Aug 2020 23:49:28 &#43;0800</lastBuildDate><atom:link href="https://huangno1.github.io/tags/js/" rel="self" type="application/rss+xml" /><item>
    <title>JS - Object Array 賦值問題</title>
    <link>https://huangno1.github.io/js_pointer_object_array_variable_assignment/</link>
    <pubDate>Thu, 06 Aug 2020 23:49:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/js_pointer_object_array_variable_assignment/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/js_pointer_object_array_variable_assignment.png" referrerpolicy="no-referrer">
            </div>關於我遇到的問題 這是我在寫小 DEMO 發現的，關於 JS 的賦值問題，這裡涉及到了 Pointer。
下面是我用簡單的 Code 描述我遇到的問題，object 是一個 Object Array，然後傳入函數進行局域變量賦值。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  let object = [ { name: &#34;John&#34;, age: 18 }, { name: &#34;Amy&#34;, age: 20 }, ] function Test(object) { let newOne = object; for (let i = 0; i &lt; newOne.length; i++) { newOne[i].name = &#34;Rose&#34;; } } Test(object) console.]]></description>
</item><item>
    <title>JS - forEach()、map()、filter()、reduce()、循環遍歷</title>
    <link>https://huangno1.github.io/js_array_prototype/</link>
    <pubDate>Thu, 06 Aug 2020 18:49:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/js_array_prototype/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/js_array_prototype.png" referrerpolicy="no-referrer">
            </div>前言 在這篇文章筆記紀錄一下 JS 的 Array 屬性。
forEach() forEach 是對每一項的操作，會影響原來的 array，不會有回傳值，即使強制寫 return，也會是空值，例子如下。
1 2 3 4 5 6 7 8 9 10 11 12 13 14  // JS forEach 與 map  // forEach 是對每一項的操作，會影響原來的 array let arr = [1, 2, 3, 4, 5, 6] // 對數組直接進行循環，相當於 for，沒有返回值 // result 不會有返回值 即使寫了 return 也是 undefined let result = arr.forEach((item, index, arr) =&gt; { console.log(item) console.log(index) console.log(arr) return item }) console.log(result)   map() map 則是不會影響原來的 array 值，而是生成新的值返回給新的數組。對 Array 每一項進行加工，加工完成之後返回一個新的數組。]]></description>
</item><item>
    <title>React 學習筆記 - JSX、組件、渲染、路由、Redux</title>
    <link>https://huangno1.github.io/react_learn_note/</link>
    <pubDate>Wed, 05 Aug 2020 21:49:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/react_learn_note/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/react_learn_note.png" referrerpolicy="no-referrer">
            </div>前言 因為我前段時間學了 React，我會在這邊文章紀錄我學到的內容。
建立一個 Hello World 在終端機輸入下面的指令，會在該目錄下生成一個名為 my-app 的 React 應用目錄。
 註：npx 是 npm 5.2+ 或更高版本附帶的包運行器工具。
 npx
1  npx create-react-app my-app   npm
1  npm init react-app my-app   Yarn
 Yarn 0.25+ 才能使用 yarn create &lt;starter-kit-package&gt;
 1  yarn create react-app my-app   Project 結構 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  my-app ├── README.]]></description>
</item></channel>
</rss>
