<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 標籤 - Rem Blog</title>
        <link>https://huangno1.github.io/tags/java/</link>
        <description>Java - 標籤 - Rem Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>fh831.cp9gw@gmail.com (Huang Po-Hsun)</managingEditor>
            <webMaster>fh831.cp9gw@gmail.com (Huang Po-Hsun)</webMaster><lastBuildDate>Tue, 15 Jun 2021 21:03:28 &#43;0800</lastBuildDate><atom:link href="https://huangno1.github.io/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Android Java - 簡易今日頭條 - 點擊新聞卡片進入新聞詳情頁與 WebView 顯示</title>
    <link>https://huangno1.github.io/android_click_card_item_move_to_detail_page/</link>
    <pubDate>Tue, 15 Jun 2021 21:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_click_card_item_move_to_detail_page/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_java_news_detail_web_view.png" referrerpolicy="no-referrer">
            </div>前言 上一篇我們已經介紹完 RecyclerView 加載更多的實現，而這篇也是最後一篇，關於點擊新聞卡片進入新聞詳情頁(Activity)。
Display 項目倉庫 簡易今日頭條 - Github
具體實現 這裡我是在新聞卡片的適配器裡面去做，將 View 設置點擊事件，然後新增一個新聞活動頁面。
ui/card/newsCardList/NewsCardAdapter.java 下面的 Code 中我舉出 NoImageCardViewHolder 子類，裡面的構造函數中去做 itemView 的點擊事件，點擊事件涉及到了傳參部份，傳參使用 intent.putExtra() 方法，然後在 NewsDetailActivity 做接收參數。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  public class NewsCardAdapter extends RecyclerView.]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - Load More 加載更多新聞內容</title>
    <link>https://huangno1.github.io/android_java_recyclerview_load_more/</link>
    <pubDate>Tue, 15 Jun 2021 20:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_recyclerview_load_more/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_java_recyclerview_load_more.png" referrerpolicy="no-referrer">
            </div>前言 上一篇我們說到了下拉刷新的實現，這篇我接著講如何實現上拉加載更多。
Display 項目倉庫 簡易今日頭條 - Github
具體實現 這裡需要使用 RecyclerView 的監聽滾動方法，當無法在往下滾動的時候，就調用加載更多的方法。
以下是 RecyclerView 設置滾動監聽的參考案例：
這裡使用了 addOnScrollListener 方法做滾動監聽，接著在 onScrolled 方法中做處理，!recyclerView.canScrollVertically(1) 代表 recyclerView 已經無法繼續往下滾了。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  // cardList mCardListRecyclerView = view.findViewById(R.id.recycler_view_card_list); mCardListRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() { @Override public void onScrollStateChanged(@NonNull @NotNull RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); } @Override public void onScrolled(@NonNull @NotNull RecyclerView recyclerView, int dx, int dy) { super.]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - Pull To Refresh 刷新新聞內容</title>
    <link>https://huangno1.github.io/android_java_pull_to_refresh/</link>
    <pubDate>Tue, 15 Jun 2021 19:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_pull_to_refresh/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_java_pull_to_refresh.png" referrerpolicy="no-referrer">
            </div>前言 上次的文章中我寫了關於圖片緩存與懶加載的部份。這篇文章就簡要說一下怎麼實現下拉刷新。
Display 項目倉庫 簡易今日頭條 - Github
具體實現 刷新的部份我是推薦使用 AndroidX 官方的方法： Swiperefreshlayout，具體說明可參考官方的 Swiperefreshlayout - Android Developers，雖然我一開始有考慮過網上一堆酷炫的第三方刷新頭，但是那些東西其實很多都是過時的，並不支持 AndroidX，使用上也有很多問題，或許你覺得 Swiperefreshlayout 很丑？但是包括 Bilibili 等手機應用大都是使用這個組件。而我目前使用的是 Github 上別人的開源項目 tuesda/CircleRefreshLayout - Github，因為這項目是已經過時的，所以我自己將該項目下載下來自己修改過時的 API，將其套用在自己的項目上，然而這項目依然有一些問題存在，但作者似乎也沒打算更新？
這裡就介紹如何用 Swiperefreshlayout。也可以看 Implementing Pull to Refresh Guide - CODEPATH
首先要加上依賴
1 2 3  dependencies { implementation &#34;androidx.swiperefreshlayout:swiperefreshlayout:1.1.0&#34; }   接著在 xml 中需要刷新渲染的 RecyclerView 或是 ListView 加上該組件。
1 2 3 4 5 6 7 8 9 10 11 12 13 14  &lt;!]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - 圖片緩存與懶加載</title>
    <link>https://huangno1.github.io/android_java_image_cache_and_lazy_load/</link>
    <pubDate>Tue, 15 Jun 2021 18:33:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_image_cache_and_lazy_load/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_image.png" referrerpolicy="no-referrer">
            </div>前言 上次的文章中我寫了關於新聞數據請求渲染的部份。這篇文章就簡要說一下怎麼做到圖片緩存與懶加載。
Display 項目倉庫 簡易今日頭條 - Github
具體實現 圖片的緩存最直接的方法就是將圖片下載到本地緩存，然後顯示到圖片，然而網上有一個 API 是 square/picasso - Github，實現原理可以看 Picasso从使用到原理详解 - JasonWang&rsquo;s Blog，這篇文章講的很好。Picasso 可以將我們的圖片進行二級緩存，並檢查內存是否有這張圖片，如果有就無需下載，沒有就進行 OkHttp 在線程池的子線程請求（也就是異步請求回調函數使用的線程）。
我是將圖片緩存寫到了 ui/card/newsCardList/NewsCardItemDataModel.java 中的 RecyclerView.ViewHolder 子類中 bindData()，這裡就只寫一下簡單的使用方式。
1  Picasso.get().load(dataModel.getAvatar()).into(mAvatarView);   Reference  簡易今日頭條 - Github  ]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - 新聞數據請求與卡片渲染</title>
    <link>https://huangno1.github.io/android_java_request_and_card_list_render/</link>
    <pubDate>Tue, 15 Jun 2021 18:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_request_and_card_list_render/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_image.png" referrerpolicy="no-referrer">
            </div>前言 上一篇文章中我介紹了如何在 RecyclerView 中渲染三種不同的卡片樣式，這次我們加上了數據請求渲染，使該頁面是動態加載的。
Display 項目倉庫 簡易今日頭條 - Github
具體實現 關於卡片渲染細節我已經在 RecyclerView 顯示多種寫過了，所以這裡專注於怎麼使用 OkHttp 進行數據請求，與重新回到主 UI Thread 進行卡片渲染。
models/news/NewsDataModel.java 這個類是為了請求回來的數據做一個數據模型，方便後面將數據添入 NewsCardItemDataModel，使邏輯更加清晰。這裡一樣有三種構造函數，分別代表三種不同的卡片類型。
package com.]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - RecyclerView 渲染多種不同樣式的新聞卡片</title>
    <link>https://huangno1.github.io/android_java_recyclerview_different_cards/</link>
    <pubDate>Tue, 15 Jun 2021 15:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_recyclerview_different_cards/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_java_card_list.jpg" referrerpolicy="no-referrer">
            </div>前言 上篇文章中我講述了如何實現Tabs 頻道頁面切換，接下來我們進一步實現 Tab Channel 中的新聞卡片列表渲染。
項目倉庫 簡易今日頭條 - Github
Display 具體實現 由於一種的渲染方法比較簡單，通常設計者是卡在顯示多種類型的 RecyclerView Item，在多種卡片 item 的設計這裡我只需要設計一種 DataModel ，然後在 DataModel 中添加 type 成員變量判斷是哪種類型的卡片。
以下我舉出實現的 Example，簡化的部份 Code，這裡的 Code 去掉： HTTP 請求的渲染、Pull To ReFresh、Load More。後面會再一一舉例。
layout/fragment_news_channel.xml 在需要渲染列表的地方加上 RecyclerView 組件。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  &lt;?]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - Tabs 頻道頁面切換</title>
    <link>https://huangno1.github.io/android_java_swip_views_with_tabs/</link>
    <pubDate>Tue, 15 Jun 2021 09:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_swip_views_with_tabs/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_java_tabbed.jpg" referrerpolicy="no-referrer">
            </div>前言 上一篇文章我寫了關於底部導覽頁的切換，這次換到關於簡易今日頭條中的 Tab Channel 切換。
項目倉庫 簡易今日頭條 - Github
Display 具體實現 這裡我一開始使用的是舊的 API 方法(ViewPagerFragment、PagerAdapter)，如果你使用的是：
 androidx.viewpager.widget.ViewPager androidx.fragment.app.FragmentPagerAdapter  你會得到一個提示是這 兩個 API 是已經棄用(deprecated) 的，尤其是在寫 FragmentPagerAdapter 類的時候，Android Studio 會在父類類名上刪除線(Strikethrough)，所以我們需要切換到新的 API：
 androidx.viewpager2.widget.ViewPager2 androidx.viewpager2.adapter.FragmentStateAdapter  那我們來開始看具體寫法，可以參考官方文檔Create swipe views with tabs using ViewPager2 - Android developers。
 註：由於這個的 tabbed 項目需求的頁面是相同的，都是展示新聞卡片，所以我們就只需要設計一個 Fragment 類，但是如果我們需要每個新聞頻道 Tab 頁面有不同的設計，就需要設計多個 Fragment 類。
 layout/fragment_home.xml 我需要在 Home Fragment 展示我的 Tabs，然後在 NewsChannelFragment 顯示各頁面內容，這裡我們有 TabLayout 和最新的 ViewPager2。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65  &lt;?]]></description>
</item><item>
    <title>Android Java - 簡易今日頭條 - 實現底部按鈕導覽切換 Fragment 頁面</title>
    <link>https://huangno1.github.io/android_java_btn_nav/</link>
    <pubDate>Tue, 15 Jun 2021 08:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/android_java_btn_nav/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/android_java_nav.png" referrerpolicy="no-referrer">
            </div>前言 我接下來會寫一系列關於安卓開發的過程，由於這學期我選修了安卓應用開發，該課程與字節跳動客戶端員工合作，課程的項目設計是 &ldquo;簡易頭條&rdquo;，而我身為安卓零基礎的學生在一週內邊做邊學，最終完成了成果。在 Blog 我所遇到的細節技術實現。這篇文章是關於底部導覽頁的實現。
項目倉庫 簡易今日頭條 - Github
Display 具體實現 使用 BottomNavigationView、NavController 與 NavigationUI.setupWithNavController() 方法去實現。
現在我需要使用三個子頁面(Fragment)分別是首頁(home)、視頻(video)、我的(account)：
 注意：目錄的正確需要自己去修改
 layout/activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  &lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt; &lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34; xmlns:app=&#34;http://schemas.android.com/apk/res-auto&#34; xmlns:tools=&#34;http://schemas.android.com/tools&#34; android:layout_width=&#34;match_parent&#34; android:layout_height=&#34;match_parent&#34; android:id=&#34;@+id/main_activity&#34; tools:context=&#34;.activity.MainActivity&#34;&gt; &lt;com.google.android.material.bottomnavigation.BottomNavigationView android:id=&#34;@+id/nav_view&#34; android:layout_width=&#34;0dp&#34; android:layout_height=&#34;wrap_content&#34; android:layout_marginStart=&#34;0dp&#34; android:layout_marginEnd=&#34;0dp&#34; android:background=&#34;?]]></description>
</item><item>
    <title>部署 SpringBoot、Flask 與 Vue 前端與雙後端完全分離 Web 項目</title>
    <link>https://huangno1.github.io/deploy_springboot_flask_vue_web/</link>
    <pubDate>Mon, 21 Dec 2020 16:49:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/deploy_springboot_flask_vue_web/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/deploy_springboot_flask_vue_web.jpg" referrerpolicy="no-referrer">
            </div>前言 由於這學期我選修了軟件測試的課程，我們以十人小組為單位，對我在暑假實訓所參與的 MD-Blog 個人空間系統項目進行 Web 測試，過程中我將那個項目部署到了阿里雲的雲服務器上。這篇文章我紀錄一下我部署 Web 的過程。
購買服務器 因為我是用學生優惠等方式白嫖到了半年的阿里雲雲服務器，所以這方面其實沒怎麼出錢，幸好在軟件測試項目結題才到期，不過用學生優惠購買最低配的雲服務器，三個月也只需要 28 元人民幣，騰訊雲我因為過不了實名認證就算了（&hellip;這裡我要吐嘈一下連雲服務器都要實名認證）。
總之購買好雲服務器後新增好實例，通常我是建議使用 CentOS7 作為服務器的操作系統，進入雲服務器的控制台，你會看到服務器的公網 IP、私網 IP 和密碼，密碼可以重新修改。
這裡我們假設我們服務器的公網 IP 是 1.2.3.4。
部署項目前的工作 安裝環境 在配置之前我們需要將我們的 JDK、Python、MySQL、Nginx 在服務器端配置完畢。
JDK 注意：服務器安裝的 JDK 環境必須跟你的打包時使用的 JDK 版本一致，不然在運行後端 JAR 包時會報版本錯誤及不兼容的問題，要選擇 JDK1.8 以上的版本。
這裡是建議自己在本地下載好 JDK 然後 SCP 上傳至服務器端，選擇 Linux x64 Compressed Archive 下載，不要下錯成 Linux ARM 架構的（因為我下錯過，沒仔細看名稱），壓縮包名大致為 jdk-8u271-linux-x64.tar.gz。
 在用 SCP 上傳前要先進入服務器新增好資料夾，如果 SCP 上傳時指定到不存在的資料夾時，不會自動幫你新建一個新的資料夾。
 1 2 3 4 5 6 7 8 9 10 11 12  ssh root@1.]]></description>
</item><item>
    <title>在 Linux 配置 Java 開發環境到虛擬硬碟 - Java8、Tomcat8、Maven3、IntelliJ IDEA</title>
    <link>https://huangno1.github.io/linux_java_tomcat_maven_intellijidea_install_configuration/</link>
    <pubDate>Tue, 28 Jan 2020 11:27:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://huangno1.github.io/linux_java_tomcat_maven_intellijidea_install_configuration/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/featuredImage/compressed/linux_java_tomcat_maven_intellijIDEA_install_configuration.png" referrerpolicy="no-referrer">
            </div>前言 我在這篇會分享我是如何在 Arch 上配置 Java 的開發環境。再來我必須說的是，我這個適用於你的電腦的 Linux SSD (root) 空間不夠的情況，大部分的人是 Windows 與 Linux 雙系統，像我只能把 SSD 割 30GB 給我 Linux (這是因為我電腦上的 Windows 有被廠商更改過，限制了割出的量)，而虛擬硬碟卻可以割到 100GB 以上，我會教大家如何將 Java 環境裝到 /home。如果覺得自己 SSD 夠用，就直接從 AUR 上 yay 下來，直接略過此次教學 (ﾒ ﾟ皿ﾟ)ﾒ，畢竟會有人覺得我這樣的做法讓系統管理有點髒。不過關於環境變量的配置可以參考我這篇文章，不管是裝在 SSD 還是 HDD。
JDK 版本選擇 JDK 1.xxx 和 JDK xxx.0 比如 jdk 1.8 和 jdk 8  參考自這網站的介紹。
 Sun 公司看別人的語言更新都更新到 xxx 了，自己的 Java 版本還是 1 點幾，讓人感覺很落後，所以在 jdk 1.6 的時候對外發布稱之為 jdk 6.0 ，讓人感覺更先進點。在寫 Java 的人眼裡都是叫 1.]]></description>
</item></channel>
</rss>
